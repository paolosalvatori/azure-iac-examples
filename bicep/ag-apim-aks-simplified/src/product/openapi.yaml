---
openapi: 3.0.2
info:
  title: Product Api
  version: 0.1.0
paths:
  "/swagger":
    get:
      summary: Get Swagger
      operationId: getSwagger
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Products
                type: object
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/products":
    get:
      summary: Get Products
      operationId: getProducts
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Products
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: New Product
      operationId: newProduct
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewProduct"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/products/{id}":
    get:
      summary: Get Product
      operationId: getProduct
      parameters:
        - required: true
          schema:
            title: id
            type: integer
          name: id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Product
      operationId: updateProduct
      parameters:
        - required: true
          schema:
            title: id
            type: integer
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewProduct"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Product
      operationId: deleteProduct
      parameters:
        - required: true
          schema:
            title: id
            type: integer
          name: id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    Product:
      title: Product
      required:
        - Name
        - ID
      type: object
      properties:
        Name:
          title: Name
          type: string
        Description:
          title: Description
          type: string
        ID:
          title: ID
          type: integer
    NewProduct:
      title: NewProduct
      required:
        - Name
      type: object
      properties:
        Name:
          title: Name
          type: string
        Description:
          title: Description
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    Error:
      title: Error
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
          format: int32
        message:
          type: string
          description: Error message
