parameters:
  - name: 'vmImage'
    default: 'ubuntu-latest'
    type: string
  - name: 'poolName'
    default: 'Azure Pipelines'
  - name: 'location'
    default: 'australiaeast'
    type: string
  - name: 'environments'
    type: object
    default: 
      - name: dev
      - name: test
      - name: prod
  - name: 'azureConnection'
    default: 'internal_azure_subscription'
    type: string
  - name: subscriptionId
    default: 'b2375b5f-8dab-4436-b87c-32bc7fdce5d0'
    type: string
  - name: 'resourceGroupName'
    default: 'ag-apim-aks-rg'
    type: string
  - name:  'aksAdminGroupObjectId'
    default: 'f6a900e2-df11-43e7-ba3e-22be99d3cede'
    type: string
  - name: 'publicDnsZone'
    type: string
  - name: 'publicDnsZoneResourceGroup'
    type: string
  - name: 'reactSpaSvcIp'
    type: string
  - name: 'keyVaultName'
    type: string
  - name: 'tlsCertSecretId'
    type: string
  - name: 'keyVaultResourceGroupName'
    type: string
  - name: gitRepoUrl
    type: string

- ${{ each environment in environment.names }}
- stage: ${{environment.name}}
  jobs:
  - deployment: 
    displayName: 'infrastructure_deployment'
    pool:
      name: ${{parameters.poolName}}
    environment: "ag_apim_aks_${{environment.name}}"
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'drop'
                targetPath: $(System.ArtifactsDirectory)
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Validate Infrastructure Templates'
              inputs:
                azureResourceManagerConnection: ${{parameters.azureConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                resourceGroupName: ${{environment.name}}-${{parameters.resourceGroupName}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/main.bicep'
                csmParametersFile: $(System.ArtifactsDirectory)/${{environment.name}}.parameters.json
                overrideParameters: '-publicDnsZoneName ${{parameters.publicDnsZone}} -publicDnsZoneResourceGroup ${{parameters.publicDnsZoneResourceGroup}} -privateDnsZoneName "${{environment.name}}.${{parameters.publicDnsZone}}" -aksAdminGroupObjectId ${{parameters.aksAdminGroupObjectId}} -kubernetesSpaIpAddress ${{parameters.reactSpaSvcIp}} -keyVaultName ${{parameters.keyVaultName}} -tlsCertSecretId ${{parameters.tlsCertSecretId}} -location ${{parameters.location}} -keyVaultResourceGroupName ${{parameters.keyVaultResourceGroupName}} -gitRepoUrl ${{parameters.gitRepoUrl}}'
                deploymentMode: Validation
                deploymentName: '${{environment.name}}-validate-infra-deployment'
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Deploy Infrastructure Templates'
              inputs:
                azureResourceManagerConnection: ${{parameters.azureConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                resourceGroupName: ${{environment.name}}-${{parameters.resourceGroupName}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/main.bicep'
                csmParametersFile: $(System.ArtifactsDirectory)/${{environment.name}}.parameters.json
                overrideParameters: '-publicDnsZoneName ${{parameters.publicDnsZone}} -publicDnsZoneResourceGroup ${{parameters.publicDnsZoneResourceGroup}} -privateDnsZoneName "${{environment.name}}.${{parameters.publicDnsZone}}" -aksAdminGroupObjectId ${{parameters.aksAdminGroupObjectId}} -kubernetesSpaIpAddress ${{parameters.reactSpaSvcIp}} -keyVaultName ${{parameters.keyVaultName}} -tlsCertSecretId ${{parameters.tlsCertSecretId}} -location ${{parameters.location}} -keyVaultResourceGroupName ${{parameters.keyVaultResourceGroupName}} -gitRepoUrl ${{parameters.gitRepoUrl}}'
                deploymentMode: Incremental
                deploymentName: '${{environment.name}}-infra-deployment'
  