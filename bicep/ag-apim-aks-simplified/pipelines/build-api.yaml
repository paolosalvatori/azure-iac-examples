# build-api.yaml

parameters:
  - name: vmImage
    default: 'ubuntu-latest'
    type: string
  - name: poolName
    default: 'Azure Pipelines'
    type: string
  - name: environment
    type: string
    default: 'dev'
  - name: 'azureConnection'
    default: 'internal_azure_subscription'
    type: string
  - name: kubernetesServiceConnection
    type: string
  - name: apiImageName
    type: string
  - name: apiSvcIp
    type: string
  - name: apiName
    type: string
  - name: apiPort
    type: string
stages:
  - stage: Build
    jobs:
    - job: Build_Container
      pool: 
        name: ${{parameters.poolName}}
        vmImage: ${{parameters.vmImage}}
      steps:
        - checkout: self
          clean: true
          persistCredentials: true
          path: /bicep/ag-apim-aks-simplified
        - task: ARM Outputs@6
          inputs:
            ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
            ConnectedServiceNameARM: $(azureConnection)
            resourceGroupName: '$(environment)-appgwy-apim-aks-rg'
            whenLastDeploymentIsFailed: 'fail'
            deploymentNameFilter: '$(environment)-infra-deployment'
        - task: AzureCLI@2
          displayName: 'build container app'
          inputs:
            azureSubscription: ${{azureConnection}}
            inlineScript: |
              Write-Host -Object "Bulding container image"
              az acr build `
                -r $(acrName) `
                -t $(apiImageName) `
                --build-arg SERVICE_PORT=$(apiPort) `
                -f $(System.DefaultWorkingDirectory)/bicep/ag-apim-aks-simplified/src/Dockerfile "$(System.DefaultWorkingDirectory)/bicep/ag-apim-aks-simplified/src/$(apiName)"
            ScriptType: pscore
        - task: AzureCLI@2
          displayName: 'patch manifest files'
          inputs:
            azureSubscription: $(azureConnection)
            scriptType: pscore
            inlineScript: |
              $(Get-Content -Path "$(System.DefaultWorkingDirectory)/bicep/ag-apim-aks-simplified/manifests/$(apiName).yaml") -replace "{{IMAGE_TAG}}", "$(acrName).azurecr.io/$(apiImageName)" -replace "{{SVC_IP_ADDRESS}}", $(apiSvcIp)
        - task: CopyFiles@2
          displayName: 'Copy Kubernetes manifests to Artifact Staging Directory'
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)/bicep/ag-apim-aks-simplified/manifests'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
            Contents: |
              **\manifests\namespace.yaml
              **\manifests\$(apiName.yaml)
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: manifests'
          inputs:
            ArtifactName: manifests
            
